Source: fold-grammars
Section: devel
Priority: extra
Maintainer: Stefan Janssen <stefan.m.janssen@gmail.com>
Standards-Version: 3.9.5
Homepage: https://github.com/jlab/fold-grammars
Build-Depends: debhelper (>= 7), 
               make (>= 3.81),
               bellmansgapc (>= 2022.02.08),
               perl (>= 5.10.1),
               g++ (>= 4:4.3.1),
               libmath-round-perl ( >= 0.06-3)

Package: rnashapes
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, bellmansgapc (>= 2022.02.08), libgsl0-dev, libgmp3-dev, libgsl0-dev (>= 1.13), libgsl0ldbl (>= 1.13), libmath-round-perl ( >= 0.06-3)
Description: RNA shape abstraction maps structures to a tree-like domain of shapes, retaining adjacency and nesting of structural features, but disregarding helix lengths. Shape abstraction integrates well with dynamic programming algorithms, and hence it can be applied during structure prediction rather than afterwards. This avoids exponential explosion and can still give us a non-heuristic and complete account of properties of the molecule's folding space.
 RNAshapes offers three powerful RNA analysis tools in one single software package:
 Computation of a small set of representative structures of different shapes, complete in a well-defined sense.
 Computation of accumulated shape probabilities.
 Comparative prediction of consensus structures, as an alternative to the over-expensive Sankoff Algorithm.

Package: pkiss
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, bellmansgapc (>= 2022.02.08), libgsl0-dev, libgmp3-dev, libgsl0-dev (>= 1.13), libgsl0ldbl (>= 1.13), libmath-round-perl ( >= 0.06-3)
Description: pkiss: RNA secondary structure prediction, including kissing hairpins
 pkiss is a tool for secondary structure prediction including kissing hairpin motifs.
 The new idea is to construct a kissing hairpin motif from an overlay of two simple pseudoknots.
 We implemented three strategies of pkiss with time/space complexities of:
 Strategy A 	O(n^4) 	O(n^2)
 Strategy B 	O(n^4) 	O(n^3)
 Strategy C 	O(n^5) 	O(n^2)

