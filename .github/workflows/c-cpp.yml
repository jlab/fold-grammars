name: github action build & CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  fold-grammars:
    strategy:
      matrix:
        task: [default, shapes, pkiss, alishapes, palikiss, knotinframe]
    runs-on: ubuntu-latest
    steps:
    # install gapcs
    - name: update apt
      run: sudo apt-get update
    - name: Install dependencies
      run: sudo apt-get install flex bison make libboost-all-dev libgsl-dev python3 python3-pip python3-biopython
    - name: clone gapc
      run: git clone -b master https://github.com/jlab/gapc.git $GITHUB_WORKSPACE/../gapc
    - name: configure
      run: cd $GITHUB_WORKSPACE/../gapc && ./configure
    - name: make
      run: cd $GITHUB_WORKSPACE/../gapc && make -j 2
    - name: make install
      run: cd $GITHUB_WORKSPACE/../gapc && sudo make install

    - uses: actions/checkout@v3
    - name: configure fold-grammars
      run: |
        cd $GITHUB_WORKSPACE/../fold-grammars
        sed -i "s#bgapDir = '/vol/gapc/'#bgapDir = '/usr/local/'#" Misc/Applications/lib/foldGrammars/Settings.pm
        sed -i "s#rootDir = '/vol/fold-grammars/src/'#rootDir = '`pwd`/'#" Misc/Applications/lib/foldGrammars/Settings.pm
    - name: execute tests
      run: |
        cd $GITHUB_WORKSPACE/../fold-grammars
        if [[ "${{ matrix.task }}" == "default" ]]; then pushd .; cd Misc/Test-Suite/GeorgStyle/; bash run.sh ../Truth; cd ../StefanStyle/; python test_cofold.py; popd; fi
        pushd .
        cd Misc/Test-Suite/StefanStyle/
        perl runTests.pl 2 ${{ matrix.task }}
        popd

  cpplint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - run: pip install cpplint
    - run: cpplint --recursive --counting 'detailed' --filter="-legal/copyright,-build/header_guard,-runtime/threadsafe_fn,-build/include_subdir,-runtime/explicit,-runtime/references" --extensions=hh Extensions/
    - uses: vishnudxb/cancel-workflow@v1.2
      if: failure()
      with:
        repo: jlab/fold-grammars
        workflow_id: ${{ github.run_id }}
        access_token: ${{ github.token }}
